function ff() {
  fd --type f --hidden --exclude .git | fzf --preview 'bat --style=numbers --color always {}' | xargs $EDITOR
}

function sf() {
  rg --color=always --line-number --no-heading --smart-case "${*:-}" |
  fzf --ansi --delimiter : \
      --preview 'bat --style=numbers --color=always --highlight-line {2} {1}' \
      --preview-window '~3,+{2}+3/2' |
  cut -d ':' -f1 |
  xargs -r $EDITOR
}

# Yazi
function y() {
	local tmp="$(mktemp -t "yazi-cwd.XXXXXX")" cwd
	yazi "$@" --cwd-file="$tmp"
	if cwd="$(command cat -- "$tmp")" && [ -n "$cwd" ] && [ "$cwd" != "$PWD" ]; then
		builtin cd -- "$cwd"
	fi
	rm -f -- "$tmp"
}

function updates {
  brew update
  brew upgrade
  brew upgrade --cask
  brew cleanup
  brew autoremove
  coursier update
  $HOME/dotfiles/bin/backupRepos.sh
}

function killDockerServices {
  if [[ $(docker ps -q | wc -c) -eq 0 ]]; then
    echo "Nothing running"
  else
    docker kill $(docker ps -q)
    docker ps
  fi
}
alias kd=killDockerServices

function deleteDockerContainers {
  if [[ $(docker ps -a -q | wc -c) -eq 0 ]]; then
    echo "No containers"
  else
    docker rm -f $(docker ps -a -q)
  fi
}
alias ddc=deleteDockerContainers

function tailDockerLogs {
  if [ -z "$1" ]; then
    echo "name missing"
    exit
  fi

  id=$(docker ps -f name=$1 --format "{{.ID}}")
  if [[ -z $id ]]
  then
    sleep 2
    tailDockerLogs $1
  else
    docker logs -f $id
  fi
}

jwt-decode() {
  jq -R 'split(".") |.[0:2] | map(@base64d) | map(fromjson)' <<< $1
}

source $HOME/dotfiles/siriusxm
